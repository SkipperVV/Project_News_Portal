Шаги создания Проекта
1. Создаём виртуальное окружение:
python -m venv venv

2. Заходим в него (активируем):
venv\scripts\activate

3. Устанавливаем Django в виртуальное окружение:
pip install django

4. И запускаем команду создания проекта:
(venv) ~/django-projects $ django-admin startproject News_Portal

5. Создаем двух пользователей:
python manage.py shell
from django.contrib.auth.models import User
администратор Django:
admin = User.objects.create_user(username="admin", password="admin")
и Супервайзера:
supervisor = User.objects.create_user(username="root", password="root")

6. Переходим в директорию проекта c (manage.py):
cd News_Portal

-------------------
сделать откат через удаление БД.
1. Удалить файл db.sqlite3 или <python manage.py flush>
2. Удалить файлы миграции в app/migrations, кроме __init__.py
3. python manage.py makemigrations
4. python manage.py migrate
-------------------

запустим следующую команду, которая создаст приложение Models
(venv) ~/News_Portal/News_Portal $ python manage.py startapp Models
и добавим его в установленные приложения в настройках проекта.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Models',
]

7. Создаем пару авторов:
from Models.models import *
u1 = User.objects.create_user(username='Достоевский')
u2=User.objects.create_user("Толстой")
u3=User.objects.create_user("Mark Twain")
u4=User.objects.create_user("Jack London")

a1=Author.objects.create(name=u1)
a2=Author.objects.create(user=u2)
a3=Author.objects.create(user=u3)
a4=Author.objects.create(user=u4)


Проверим рэйтинг =0
a1.rating
0

8. Добавим публикации
p1=Post.objects.create(title='Преступление и наказание',text='Родион Раскольников', category='AR',author=a1)
p2=Post.objects.create(title='Война и мир',text='Пьер Безухов', author=a2)
p3=Post.objects.create(title='A Dog’s Tale',text='Dog', author=a3)
p4=Post.objects.create(title='Burning Daylight',text='Элам Харниш, удачливый золотоискатель с Аляски', author=a4)
p5=Post.objects.create(title='РИА Новости - события в Москве', text='При оценке действий Армении по ратификации Римского статута Россия будет отталкиваться от разъяснений Еревана, заявила на брифинге официальный представитель МИД Мария Захарова.', post_type= 'news' ,author=admin)

и комментарии
c1=Comment.objects.create(text='Very good', post=p1, user=a1.user)
c2=Comment.objects.create(text='Nice', post=p1, user=a2.user)
c3=Comment.objects.create(text='Perfect', post=p1, user=a3.user)
или без присвоения:
Comment.objects.create(text='Super', post=p3, user=a1.user)
Comment.objects.create(text='Interesting', post=p4, user=a1.user)
Comment.objects.create(text='Замечательный роман', post=p1, user=u7)

----------Присвоить переменным значения при сбросе терминала
from Models.models import *
#--Users--------Authors---
u1 = User.objects.get(username='Достоевский')
u2 = User.objects.get(username='Толстой')
u3 = User.objects.get(username='Mark Twain')
u4 = User.objects.get(username='Jack London')

a1=Author.objects.get(user=u1)
a2=Author.objects.get(user=u2)
a3=Author.objects.get(user=u3)
a4=Author.objects.get(user=u4)

#--Посмотреть Юзеров всех и по желанию-------
User.objects.all()
User.objects.all()[4].username
User.objects.get(username='admin').id

#------и получить данные-----------------------
p1=Post.objects.get(author=a1)
p4=Post.objects.get(author=a4)

p1.title
p1.text

p2=Post.objects.get(author=a2)
p3=Post.objects.get(author=a3)

c1=Comment.objects.get(user=a1.user)
c1.text
c2=Comment.objects.get(user=a2.user)
c3=Comment.objects.get(user=a3.user)
c4=Comment.objects.get(user=a1.user)
c3.post.text
c3.post.author.user.username
#Можно напрямую: Post.objects.get(author=a1).text
#Author.objects.get(user.username=='Достоевский').rating

9. Поставим лайк на пост
p1.like()
p2.like()
p3.like()
c1.like()
....

10--------Добавить 4 категории в модель Category---------------------
cat1=Category.objects.create(name="Novel")
cat2=Category.objects.create(name='Story')
cat3=Category.objects.create(name='Drama')
cat4=Category.objects.create(name='Article')

Присвоить обратно при сбросе---------------------------
cat1=Category.objects.get(name="Novel")
cat2=Category.objects.get(name='Story')
cat3=Category.objects.get(name='Drama')
cat4=Category.objects.get(name='Article')

11----присвоить категории постам-----------------------
p1.category.add(1)
p1.category.add(2)
p1.category.add(4)
p2.category.add(2)

-----Посмотреть категории-----------------
p1.category.all()[0].name
p1.category.all()[1].name
p2.category.all()[0].name
p4.category.all()[0].name


-------Получить все комментарии автора через юзера и ---------------------------------
a1.user.comment_set.all()
a1.user.comment_set.all()[0].text
a1.user.comment_set.all()[2].text
a2.user.comment_set.all()[0].text



--------Вывести дату добавления, имя автора, рейтинг, заголовок и превью лучшей статьи-----
Post.get_best_post()

--------Вывести username и рейтинг лучшего пользователя------------------------------------
Author.get_best_author()